# data file for the Fltk User Interface Designer (fluid)
version 1.0105 
header_name {.h} 
code_name {.C}
decl {\#include "ImageWindow3d.H"} {public
} 

decl {\#include "spyview3d.H"} {public
} 

Function {make_window()} {open C return_type void
} {
  Fl_Window control {
    label Controls open
    xywh {508 42 240 585} type Double visible
  } {
    Fl_Choice filech {
      label {file:}
      callback filech_cb open
      xywh {45 5 190 25} down_box BORDER_BOX
    } {}
    Fl_Choice cmapch {
      label {cmap:}
      callback cmapch_cb open
      xywh {60 35 175 25} down_box BORDER_BOX
    } {}
    Fl_Light_Button greybutton {
      label Grey
      callback {iw3d->grey=greybutton->value();
iw3d->redraw();}
      xywh {185 85 50 20} labelsize 12
    }
    Fl_Group {} {
      label {Surface Type} open
      xywh {20 80 210 25} align 5
    } {
      Fl_Round_Button pointsbutton {
        label Pnt
        callback {iw3d->surfacetype = POINTS;
iw3d->redraw();}
        xywh {20 85 25 20} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Round_Button linemeshbutton {
        label Line
        callback {iw3d->surfacetype = LINEMESH;
iw3d->redraw();}
        xywh {70 85 25 20} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Round_Button polygonsbutton {
        label Poly
        callback {iw3d->surfacetype = POLYGONS;
iw3d->redraw();}
        xywh {125 85 25 20} type Radio down_box ROUND_DOWN_BOX value 1
      }
    }
    Fl_Button resetanglebutton {
      label {Reset Angle}
      callback {iw3d->remove_trans("angle");
iw3d->redraw();}
      xywh {5 115 115 25}
    }
    Fl_Button resetzoombutton {
      label {Reset Zoom}
      callback {iw3d->remove_trans("scale");
iw3d->redraw();}
      xywh {125 115 110 25}
    }
    Fl_Button resettranslatebutton {
      label {Reset Trans.}
      callback {iw3d->remove_trans("translate");
iw3d->redraw();}
      xywh {5 145 115 25}
    }
    Fl_Button resetallbutton {
      label {Reset All}
      callback {iw3d->remove_all_trans();
iw3d->redraw();}
      xywh {125 145 110 25}
    }
    Fl_Value_Input psival {
      label {Psi, Theta:}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setPsi(val);}
      xywh {130 185 45 25} when 8
    }
    Fl_Value_Input thetaval {
      label {,}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setTheta(val);}
      xywh {185 185 45 25} when 8
    }
    Fl_Value_Input zoomval {
      label {Zoom, Zscale:}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setScaleZ(val*iw3d->getScaleZ()/iw3d->getScaleX());
iw3d->setScaleX(val);
iw3d->setScaleY(val);}
      xywh {130 220 45 25} when 8
    }
    Fl_Value_Input zscaleval {
      label {,}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setScaleZ(val);}
      xywh {185 220 45 25} when 8
    }
    Fl_Value_Input xtranval {
      label {X,Y Translation:}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setTranslateX(val);}
      xywh {130 255 45 25} when 8
    }
    Fl_Value_Input ytranval {
      label {,}
      callback {double val=((Fl_Valuator *)o)->value();
iw3d->setTranslateY(val);}
      xywh {185 255 45 25} when 8
    }
    Fl_Light_Button planeb {
      label {Sub Plane}
      callback {iw3d->plane = planeb->value();
iw3d->redraw();}
      xywh {10 295 110 25}
    }
    Fl_Button fitplane {
      label {Fit Plane}
      callback {iw3d->fitPlane();
plane_b->value(iw3d->plane_b);
plane_broller->value(iw3d->plane_b);
plane_bslider->value(iw3d->plane_b);
plane_a->value(iw3d->plane_a);
plane_aroller->value(iw3d->plane_a);
plane_aslider->value(iw3d->plane_a);
iw3d->redraw();}
      xywh {125 295 110 25}
    }
    Fl_Value_Input plane_a {
      label {Vert:}
      callback {iw3d->plane_a = plane_a->value();
iw3d->redraw();
plane_aroller->value(plane_a->value());
plane_aslider->value(plane_a->value());}
      xywh {45 325 70 20} when 8 minimum -2 maximum 2 step 0.0001
    }
    Fl_Slider plane_aslider {
      callback {plane_a->value(((Fl_Valuator *) o)->value() );
plane_a->do_callback();}
      xywh {115 325 120 20} type {Horz Fill} minimum -2 maximum 2
    }
    Fl_Roller plane_aroller {
      callback {plane_a->value(((Fl_Valuator *) o)->value() );
plane_a->do_callback();}
      xywh {45 345 190 15} type Horizontal minimum -2 maximum 2
    }
    Fl_Value_Input plane_b {
      label {Horz:}
      callback {iw3d->plane_b = plane_b->value();
iw3d->redraw();
plane_broller->value(plane_b->value());
plane_bslider->value(plane_b->value());}
      xywh {45 370 70 20} when 8 minimum -2 maximum 2 step 0.0001
    }
    Fl_Slider plane_bslider {
      callback {plane_b->value(((Fl_Valuator *) o)->value() );
plane_b->do_callback();}
      xywh {115 370 120 20} type {Horz Fill} minimum -2 maximum 2
    }
    Fl_Roller plane_broller {
      callback {plane_b->value(((Fl_Valuator *) o)->value() );
plane_b->do_callback();}
      xywh {45 390 190 15} type Horizontal minimum -2 maximum 2
    }
    Fl_Input savebox {
      label {save as:}
      xywh {75 420 160 25}
    }
    Fl_Button saveb {
      label save
      callback saveb_cb
      xywh {170 450 65 25}
    }
    Fl_Group {} {
      label {Saved file format:}
      xywh {10 470 215 50} align 5
    } {
      Fl_Round_Button postscriptbutton {
        label PostScript
        xywh {10 475 25 25} type Radio down_box ROUND_DOWN_BOX value 1
      }
      Fl_Round_Button epsbutton {
        label EPS
        xywh {10 495 25 25} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Round_Button latexbutton {
        label LaTeX
        xywh {105 475 25 25} type Radio down_box ROUND_DOWN_BOX
      }
    }
    Fl_Button show_lighting_controls_window {
      label Lighitng
      callback {if (lwin->shown())
 lwin->hide();
else
 lwin->show();}
      xywh {5 525 75 25}
    }
    Fl_Button {} {
      label {Image Processing}
      callback {if (procwin->shown())
 procwin->hide();
else
 procwin->show();}
      xywh {85 525 150 25}
    }
    Fl_Button {} {
      label Colors
      callback {if (cmapwin->shown())
 cmapwin->hide();
else
 cmapwin->show();}
      xywh {5 555 65 25}
    }
    Fl_Button {} {
      label Exit
      callback {exit(0);}
      xywh {75 555 75 25}
    }
    Fl_Button dismissb {
      label dismiss
      callback {control->hide();}
      xywh {155 555 80 25}
    }
  }
  Fl_Window lwin {
    label {Lighting Controls}
    xywh {1044 283 230 335} type Double visible
  } {
    Fl_Button {} {
      label dismiss
      callback {lwin->hide();}
      xywh {120 305 105 25}
    }
    Fl_Value_Slider diffuseslider {
      label Diffuse
      callback {iw3d->diffuse=diffuseslider->value();
iw3d->redraw();}
      xywh {65 145 160 25} type {Horz Fill} align 4 step 0.001 value 1
    }
    Fl_Value_Slider specularslider {
      label Specular
      callback {iw3d->specular=specularslider->value();
iw3d->redraw();}
      xywh {65 175 160 25} type {Horz Fill} align 4 step 0.001
    }
    Fl_Value_Slider ambientslider {
      label Ambient
      callback {iw3d->ambient=ambientslider->value();
iw3d->redraw();}
      xywh {65 115 160 25} type {Horz Fill} align 4 step 0.001 value 0.2
    }
    Fl_Light_Button plot_light_positions {
      label {Plot Position}
      callback {iw3d->plot_light_positions = plot_light_positions->value();
iw3d->redraw();}
      xywh {120 5 105 25} value 1 align 16
    }
    Fl_Light_Button lightingbutton {
      label {Do Lighting}
      callback {iw3d->lighting=lightingbutton->value();
iw3d->redraw();}
      xywh {5 5 105 25}
    }
    Fl_Group {} {
      label Type open
      xywh {10 50 150 60} align 5
    } {
      Fl_Round_Button {} {
        label {Point source}
        callback {iw3d->light_type = POINTSOURCE;
iw3d->redraw();}
        xywh {15 55 25 25} type Radio down_box ROUND_DOWN_BOX
      }
      Fl_Round_Button {} {
        label {Directional source}
        callback {iw3d->light_type = DIRECTIONAL;
iw3d->redraw();}
        xywh {15 80 25 25} type Radio down_box ROUND_DOWN_BOX value 1
      }
    }
    Fl_Button {} {
      label reset
      callback {double vals[] = {.2, 1, 0, 0, 90, 1};
Fl_Valuator *widgets[] = {
	ambientslider,
	diffuseslider,
	specularslider,
	phiroll,
	thetaroll, 
	rroll};
for (int i=0; i<6; i++)
{
 (widgets[i])->value(vals[i]);
 (widgets[i])->do_callback();
}}
      xywh {5 305 105 25}
    }
    Fl_Roller phiroll {
      callback {double val = phiroll->value();
val = fmod(val, 360);
iw3d->light_phi = val;
lphival->value(val);
iw3d->redraw();}
      xywh {100 210 125 25} type Horizontal minimum -1e+06 maximum 1e+06 step 1
    }
    Fl_Roller thetaroll {
      callback {double val = thetaroll->value();
val = fmod(val, 360);
iw3d->light_theta = val;
lthetaval->value(val);
iw3d->redraw();}
      xywh {100 240 125 25} type Horizontal minimum -1e+06 maximum 1e+06 step 1 value 90
    }
    Fl_Roller rroll {
      callback {iw3d->light_r = rroll->value();
rval->value(rroll->value());
iw3d->redraw();}
      xywh {100 270 125 25} type Horizontal maximum 2 step 0.01 value 1
    }
    Fl_Value_Output lphival {
      label phi
      xywh {65 210 35 25} minimum -1e+06 maximum 1e+06
    }
    Fl_Value_Output lthetaval {
      label theta
      xywh {65 240 35 25} minimum -1e+06 maximum 1e+06 value 90
    }
    Fl_Value_Output rval {
      label r
      xywh {65 270 35 25} maximum 2 value 1
    }
  }
  Fl_Window imagewindow {
    xywh {76 652 415 380} type Double hide resizable
  } {
    Fl_Group iw3d {open
      xywh {0 0 415 385} resizable
      class ImageWindow3d
    } {}
  }
  Fl_Window procwin {
    label {Image Processing}
    xywh {763 42 330 190} type Double color 29 visible
  } {
    Fl_Browser options {
      label Options
      xywh {10 25 110 160} type Hold color 29 align 1 when 10
    }
    Fl_Browser pqueue {
      label Queue
      xywh {210 25 110 160} type Hold align 1
    }
    Fl_Button {} {
      label {@->  add}
      callback {int n = options->value();
if (n != 0)
  pqueue->add(options->text(n));
filech->do_callback();}
      xywh {130 25 70 20} align 20
    }
    Fl_Button {} {
      label remove
      callback {int n = pqueue->value();
if (n != 0)
{
  pqueue->remove(n);
  filech->do_callback();
}}
      xywh {130 110 70 20}
    }
    Fl_Button {} {
      label clear
      callback {pqueue->clear();
filech->do_callback();}
      xywh {130 135 70 20}
    }
    Fl_Button {} {
      label {up @8->}
      callback {int n = pqueue->value();
if (n > 1)
{
 pqueue->move(n,n-1);
 filech->do_callback();
}}
      xywh {130 55 70 20} align 24
    }
    Fl_Button {} {
      label {down @2}
      callback {int n = pqueue->value();
if ((n > 0) && (n < pqueue->size()))
{
 pqueue->move(n,n+1);
 filech->do_callback();
}}
      xywh {130 80 70 20} align 24
    }
    Fl_Button {} {
      label dismiss
      callback {procwin->hide();}
      xywh {130 165 70 20}
    }
  }
  Fl_Window cmapwin {
    label {Colormap Controls}
    xywh {763 262 240 165} type Double visible
  } {
    Fl_Value_Slider wslider {
      label Width
      callback {iw3d->cmapwidth = wslider->value();
wroller->value(wslider->value());
iw3d->redraw();}
      xywh {50 5 185 25} type {Horz Fill} align 4 maximum 4 step 0.001 value 1
    }
    Fl_Roller wroller {
      callback {wslider->value(wroller->value());
wslider->do_callback();}
      xywh {50 30 185 15} type Horizontal maximum 4
    }
    Fl_Value_Slider cslider {
      label Center
      callback {iw3d->cmapoffset = cslider->value();
croller->value(cslider->value());
iw3d->redraw();}
      xywh {50 55 185 25} type {Horz Fill} align 4 minimum -1 step 0.001
    }
    Fl_Roller croller {
      callback {cslider->value(croller->value());
cslider->do_callback();}
      xywh {50 80 185 15} type Horizontal minimum -1
    }
    Fl_Light_Button {} {
      label Invert
      callback {iw3d->invert = ((Fl_Button *)o)->value();
iw3d->redraw();}
      xywh {170 105 65 25}
    }
    Fl_Button {} {
      label Nomalize
      callback {iw3d->normalize();
wslider->value(1);
wslider->do_callback();
cslider->value(0);
cslider->do_callback();
iw3d->redraw();}
      xywh {5 105 75 25}
    }
    Fl_Light_Button {} {
      label Negate
      callback {iw3d->negate = ((Fl_Button *)o)->value();
iw3d->redraw();}
      xywh {90 105 70 25}
    }
    Fl_Button {} {
      label dismiss
      callback {cmapwin->hide();} selected
      xywh {5 135 230 25}
    }
  }
} 
