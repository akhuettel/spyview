// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef spypal_wizard_h
#define spypal_wizard_h
#include <FL/Fl.H>
#include "spypal_gradient.H"
#include "../config.h"
#include <FL/Fl_Color_Chooser.H>
#include "Fl_Table.H"
#include "spypal.h"
#include <stdlib.h>
#include <stdio.h>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Spinner.H>

class spypal_wizard_base {
public:
  spypal_wizard_base();
  Fl_Double_Window *win;
  Fl_Input *steps;
private:
  void cb_steps_i(Fl_Input*, void*);
  static void cb_steps(Fl_Input*, void*);
  static Fl_Menu_Item menu_[];
  void cb_Open_i(Fl_Menu_*, void*);
  static void cb_Open(Fl_Menu_*, void*);
  void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
  void cb_Export_i(Fl_Menu_*, void*);
  static void cb_Export(Fl_Menu_*, void*);
  void cb_Export1_i(Fl_Menu_*, void*);
  static void cb_Export1(Fl_Menu_*, void*);
  void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
  void cb_Manual_i(Fl_Menu_*, void*);
  static void cb_Manual(Fl_Menu_*, void*);
public:
  Fl_Color_Chooser *cc;
  Fl_Spypal_Gradient *grad;
  Fl_Scroll *swatches;
  Fl_Output *tooltip;
private:
  void cb_Space_i(Fl_Button*, void*);
  static void cb_Space(Fl_Button*, void*);
public:
  Fl_Group *advanced_controls;
  Fl_Choice *colorspace;
private:
  void cb_colorspace_i(Fl_Choice*, void*);
  static void cb_colorspace(Fl_Choice*, void*);
  static Fl_Menu_Item menu_colorspace[];
public:
  Fl_Choice *metricspace;
private:
  void cb_metricspace_i(Fl_Choice*, void*);
  static void cb_metricspace(Fl_Choice*, void*);
  static Fl_Menu_Item menu_metricspace[];
public:
  Fl_Choice *opt_direction;
private:
  void cb_opt_direction_i(Fl_Choice*, void*);
  static void cb_opt_direction(Fl_Choice*, void*);
  static Fl_Menu_Item menu_opt_direction[];
public:
  Fl_Group *basic_controls;
  Fl_Choice *grad_style;
private:
  void cb_grad_style_i(Fl_Choice*, void*);
  static void cb_grad_style(Fl_Choice*, void*);
  static Fl_Menu_Item menu_grad_style[];
  void cb_Luv_i(Fl_Menu_*, void*);
  static void cb_Luv(Fl_Menu_*, void*);
  void cb_sRGB_i(Fl_Menu_*, void*);
  static void cb_sRGB(Fl_Menu_*, void*);
  void cb_HSV_i(Fl_Menu_*, void*);
  static void cb_HSV(Fl_Menu_*, void*);
public:
  Fl_Light_Button *advanced;
private:
  void cb_advanced_i(Fl_Light_Button*, void*);
  static void cb_advanced(Fl_Light_Button*, void*);
public:
  Fl_Group *import_controls;
  Fl_Spinner *waypoints;
private:
  void cb_waypoints_i(Fl_Spinner*, void*);
  static void cb_waypoints(Fl_Spinner*, void*);
public:
  Fl_Output *import_error;
private:
  void cb_Residuals_i(Fl_Button*, void*);
  static void cb_Residuals(Fl_Button*, void*);
  void cb_Dismiss_i(Fl_Button*, void*);
  static void cb_Dismiss(Fl_Button*, void*);
public:
  void do_update();
  virtual void recalculate(bool repos = false);
  virtual void save(std::string fname);
  virtual void load(std::string fname);
  virtual void space_evenly();
  virtual void import_update();
  virtual void import_residuals();
};
#include <FL/Fl_Check_Button.H>

class spypal_slider_editor {
public:
  void update_slider();
  spypal_slider_editor();
  Fl_Double_Window *win;
  Fl_Input *position;
private:
  void cb_position_i(Fl_Input*, void*);
  static void cb_position(Fl_Input*, void*);
  void cb_Dismiss1_i(Fl_Button*, void*);
  static void cb_Dismiss1(Fl_Button*, void*);
public:
  Fl_Check_Button *locked;
private:
  void cb_locked_i(Fl_Check_Button*, void*);
  static void cb_locked(Fl_Check_Button*, void*);
public:
  Fl_Spypal_GSlider *slider;
};
extern Fl_Double_Window *spypal_text_window;
#include <FL/Fl_Text_Display.H>
extern Fl_Text_Display *cmap_text_display;
Fl_Double_Window* make_spypal_text_window();
#endif
