// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef ImageWindow_Fitting_Ui_h
#define ImageWindow_Fitting_Ui_h
#include <FL/Fl.H>
#include "ImageWindow_Fitting.H"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>

class NewFitFuncWindow {
public:
  Fitting::FitFunction *editing; 
  NewFitFuncWindow(Fitting::FitFunction *ff = NULL);
  Fl_Double_Window *newfitfunc;
  Fl_Button *cancel;
private:
  void cb_cancel_i(Fl_Button*, void*);
  static void cb_cancel(Fl_Button*, void*);
public:
  Fl_Input *initialization;
  Fl_Input *definition;
  Fl_Input *description;
  Fl_Input *name;
private:
  void cb_Ok_i(Fl_Return_Button*, void*);
  static void cb_Ok(Fl_Return_Button*, void*);
public:
  Fl_Input *guess;
  Fl_Input *center;
  Fl_Input *width;
  ~NewFitFuncWindow();
};
#include <FL/Fl_Browser.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Output.H>

class FitControls {
public:
  FitControls();
  Fl_Double_Window *win;
  Fl_Browser *funcs;
private:
  void cb_funcs_i(Fl_Browser*, void*);
  static void cb_funcs(Fl_Browser*, void*);
  void cb_New_i(Fl_Button*, void*);
  static void cb_New(Fl_Button*, void*);
public:
  Fl_Text_Display *description;
  Fl_Text_Display *definition;
  Fl_Browser *current;
private:
  void cb_current_i(Fl_Browser*, void*);
  static void cb_current(Fl_Browser*, void*);
  void cb_Delete_i(Fl_Button*, void*);
  static void cb_Delete(Fl_Button*, void*);
  void cb_Add_i(Fl_Button*, void*);
  static void cb_Add(Fl_Button*, void*);
  void cb_Erase_i(Fl_Button*, void*);
  static void cb_Erase(Fl_Button*, void*);
public:
  Fl_Scroll *variables;
  Fl_Button *fitall;
private:
  void cb_fitall_i(Fl_Button*, void*);
  static void cb_fitall(Fl_Button*, void*);
  void cb_Fit_i(Fl_Button*, void*);
  static void cb_Fit(Fl_Button*, void*);
  void cb_Clear_i(Fl_Button*, void*);
  static void cb_Clear(Fl_Button*, void*);
  void cb_Apply_i(Fl_Button*, void*);
  static void cb_Apply(Fl_Button*, void*);
public:
  Fl_Light_Button *overlayPeaks;
private:
  void cb_overlayPeaks_i(Fl_Light_Button*, void*);
  static void cb_overlayPeaks(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *overlayWidths;
private:
  void cb_overlayWidths_i(Fl_Light_Button*, void*);
  static void cb_overlayWidths(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *plot_fit;
private:
  void cb_plot_fit_i(Fl_Light_Button*, void*);
  static void cb_plot_fit(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *plot_individual;
private:
  void cb_plot_individual_i(Fl_Light_Button*, void*);
  static void cb_plot_individual(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *plot_residual;
private:
  void cb_plot_residual_i(Fl_Light_Button*, void*);
  static void cb_plot_residual(Fl_Light_Button*, void*);
public:
  Fl_Choice *lctype;
private:
  void cb_lctype_i(Fl_Choice*, void*);
  static void cb_lctype(Fl_Choice*, void*);
  static Fl_Menu_Item menu_lctype[];
public:
  Fl_Output *line;
private:
  void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
  void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
  void cb_Copy_i(Fl_Button*, void*);
  static void cb_Copy(Fl_Button*, void*);
  void cb_Copy1_i(Fl_Button*, void*);
  static void cb_Copy1(Fl_Button*, void*);
public:
  Fl_Button *lock;
private:
  void cb_lock_i(Fl_Button*, void*);
  static void cb_lock(Fl_Button*, void*);
  void cb_Push_i(Fl_Button*, void*);
  static void cb_Push(Fl_Button*, void*);
  void cb_Pop_i(Fl_Button*, void*);
  static void cb_Pop(Fl_Button*, void*);
public:
  Fl_Output *stackdepth;
private:
  void cb_Clear1_i(Fl_Button*, void*);
  static void cb_Clear1(Fl_Button*, void*);
public:
  Fl_Button *undo;
private:
  void cb_undo_i(Fl_Button*, void*);
  static void cb_undo(Fl_Button*, void*);
public:
  Fl_Button *redo;
private:
  void cb_redo_i(Fl_Button*, void*);
  static void cb_redo(Fl_Button*, void*);
  void cb_Save_i(Fl_Button*, void*);
  static void cb_Save(Fl_Button*, void*);
  void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
public:
  Fl_Button *unlock;
private:
  void cb_unlock_i(Fl_Button*, void*);
  static void cb_unlock(Fl_Button*, void*);
  void cb_Export_i(Fl_Button*, void*);
  static void cb_Export(Fl_Button*, void*);
  void cb_Fit1_i(Fl_Button*, void*);
  static void cb_Fit1(Fl_Button*, void*);
public:
  Fl_Input *fitlimit;
private:
  void cb_fitlimit_i(Fl_Input*, void*);
  static void cb_fitlimit(Fl_Input*, void*);
  void cb_Debug_i(Fl_Light_Button*, void*);
  static void cb_Debug(Fl_Light_Button*, void*);
  void cb_Edit_i(Fl_Button*, void*);
  static void cb_Edit(Fl_Button*, void*);
public:
  Fl_Input *peakrange;
private:
  void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
  void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  void cb_4_i(Fl_Button*, void*);
  static void cb_4(Fl_Button*, void*);
  void cb_5_i(Fl_Button*, void*);
  static void cb_5(Fl_Button*, void*);
public:
  Fl_Light_Button *superpose;
private:
  void cb_superpose_i(Fl_Light_Button*, void*);
  static void cb_superpose(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *autoright;
};
#endif
