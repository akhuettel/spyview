# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
header_name {.h} 
code_name {.cxx}
decl {\#include "ImageWindow.H"} {} 

decl {\#include "ImageWindow_LineDraw.H"} {} 

decl {\#include <FL/Fl_File_Chooser.H>} {} 

decl {class ImageWindow;} {public
} 

class LineDraw_Control {open
} {
  Function {LineDraw_Control()} {open
  } {
    Fl_Window win {
      label {Line Draw} open
      xywh {963 182 300 240} type Double visible
    } {
      Fl_Button {} {
        label dismiss
        callback {win->hide();}
        xywh {5 215 290 20} labelsize 11
      }
      Fl_Group {} {
        label {Gnuplot Overlay} open
        xywh {0 15 300 65} box DOWN_BOX labelsize 11 align 5
      } {
        Fl_Button {} {
          label {&Reload}
          callback {LineDrawer->loadGnuplotLines(file->value());}
          xywh {190 28 100 22} labelsize 11
        }
        Fl_File_Input file {
          label File
          xywh {35 19 145 31} labelsize 11 textsize 11
          code0 {o->value("/tmp/table.dat");}
        }
        Fl_Light_Button autodelete {
          label {&Autodelete}
          xywh {190 55 100 20} value 1 labelsize 11
        }
        Fl_Light_Button autognu {
          label {&Autoload}
          callback {if(autognu->value())
  LineDrawer->watchGnuplot();}
          xywh {85 55 100 20} labelsize 11
        }
      }
      Fl_Check_Button endpoints {
        label {Draw Endpoints}
        callback {LineDrawer->iw->redraw_overlay();}
        xywh {5 85 100 20} down_box DOWN_BOX
      }
      Fl_Light_Button highlight_nl {
        label {Highlight NL}
        callback {LineDrawer->iw->redraw_overlay();}
        xywh {155 115 140 20}
      }
      Fl_Button {} {
        label {Info Window}
        callback {if (nl_info_win->shown())
	nl_info_win->hide();
else
{
	nl_info_win->show();
	LineDrawer->update_info_win();
}}
        xywh {155 140 140 20}
      }
      Fl_Button {} {
        label {Delete all}
        callback {while(!LineDrawer->lines.empty())
	LineDrawer->lines.pop_front();
LineDrawer->iw->redraw_overlay();}
        tooltip {Shft-D} xywh {5 140 140 20}
      }
      Fl_Button {} {
        label {Load Default}
        callback {string name=LineDrawer->iw->output_basename;
name += ".lines";
LineDrawer->loadLines(name.c_str());}
        tooltip {Load lines from file "filename.lines"} xywh {5 165 140 20}
      }
      Fl_Button {} {
        label {Save Default}
        callback {string name=LineDrawer->iw->output_basename;
name += ".lines";
LineDrawer->saveLines(name.c_str());}
        tooltip {Save lines to file "filename.lines"} xywh {5 190 140 20}
      }
      Fl_Button {} {
        label {Load...}
        callback {Fl_File_Chooser chooser(".", 
			"(*.lines)\\t",
			Fl_File_Chooser::SINGLE,
			"Select files");
chooser.preview(0);
chooser.show();
while (chooser.shown()) Fl::wait();
if (chooser.value() == NULL) return;
LineDrawer->loadLines(chooser.value(1));}
        tooltip {Load lines from a file} xywh {155 165 140 20}
      }
      Fl_Button {} {
        label {Save...}
        callback {Fl_File_Chooser chooser(".", 
			"(*.lines)\\t",
			Fl_File_Chooser::CREATE,
			"Select files");
chooser.preview(0);
chooser.show();
while (chooser.shown()) Fl::wait();
if (chooser.value() == NULL) return;
LineDrawer->saveLines(chooser.value(1));}
        tooltip {Save lines to a file} xywh {155 190 140 20}
      }
      Fl_Light_Button plot_nl {
        label {Plot NL}
        callback {LineDrawer->iw->redraw_overlay();} selected
        xywh {5 115 140 20} deactivate
      }
    }
    Fl_Window nl_info_win {
      label {Line Info}
      xywh {1030 64 315 355} type Double hide resizable
    } {
      Fl_Group {} {open
        xywh {10 10 280 15}
      } {
        Fl_Round_Button {} {
          label {Real units}
          xywh {10 10 70 15} type Radio down_box ROUND_DOWN_BOX value 1
        }
        Fl_Round_Button nl_pixels {
          label PIxels
          xywh {105 10 70 15} type Radio down_box ROUND_DOWN_BOX
        }
      }
      Fl_Input nl_fmt {
        label {fmt:}
        xywh {210 8 50 20}
        code0 {o->value("%.3g");}
      }
      Fl_Output nl_x1 {
        label x1
        xywh {25 35 75 25} color 48 textcolor 15
      }
      Fl_Output nl_x2 {
        label x2
        xywh {135 35 75 25} color 48 textcolor 15
      }
      Fl_Output nl_y1 {
        label y1
        xywh {25 65 75 25} color 48 textcolor 15
      }
      Fl_Output nl_y2 {
        label y2
        xywh {135 65 75 25} color 48 textcolor 15
      }
      Fl_Output nl_slope {
        label {Slope:}
        xywh {55 100 95 25} color 48 textcolor 15
      }
      Fl_Group {} {open
        xywh {150 35 160 90}
      } {
        Fl_Output nl_slope_unit {
          xywh {150 100 160 25} box NO_BOX textsize 12
        }
        Fl_Output nl_xunit {
          xywh {215 35 95 25} box NO_BOX textsize 12
        }
        Fl_Output nl_yunit {
          xywh {215 65 95 25} box NO_BOX textsize 12
        }
      }
      Fl_Browser line_display {
        callback {//LineDrawer->nearest = line_display->selection()->user_data();}
        xywh {10 155 295 165} type Select resizable
      }
      Fl_Button {} {
        label dismiss
        callback {nl_info_win->hide();}
        xywh {10 325 295 20}
      }
      Fl_Box {} {
        label {\# Slope Yintercept Xintercept}
        xywh {10 136 32 14} align 20
      }
    }
  }
} 
